<html>
<head>
<title>ALGLIB++ Revision Sequence - main branch</title>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<style type="text/css">
h1		{ font-family: Arial, Helvetica, sans-serif; color: #000000; font-size: 36pt; margin-top: 0; margin-bottom: 0; }
h2		{ font-family: Arial, Helvetica, sans-serif; color: #003300; font-size: 20pt; margin-bottom: 0; }
h3		{ font-family: Arial, Helvetica, sans-serif; color: #006600; font-size: 15pt; margin-bottom: 0; }
h4		{ font-family: Arial, Helvetica, sans-serif; color: #666600; font-size: 14pt; margin-bottom: 0; }
h5		{ font-family: Arial, Helvetica, sans-serif; color: #660000; font-size: 14pt; margin-top: 10pt; margin-bottom: 0; }
h6		{ font-family: Arial, Helvetica, sans-serif; color: #000066; font-size: 13pt; margin-top: 10pt; margin-bottom: 0; }
sheader		{ }
.inlineheader	{ background-color: #e8e8e8; padding: 0.1em; font-weight: bold; }
.pagecontent	{ font-family: Verdana, Arial, sans-serif; font-size: 10pt; text-align: justify; }
.pageheader	{ width: 50em; }
.source		{ font-family: "Courier New"; font-size: 1.0em; margin-top: 0; margin-bottom: 0; }
.narration	{ font-family: "Courier New"; font-size: 1.0em; margin-top: 0; margin-bottom: 0; color: navy; }
.declaration	{ font-family: "Courier New"; font-size: 1.0em; margin-top: 0; margin-bottom: 0; color: blue; }
code		{ font-family: "Courier New"; font-size: 1.0em; }
.p_example	{ margin-left: 4em; font-family: "Courier New"; font-size: 1.0em; }
.p_note		{ margin-left: 10%; margin-right: 10%; font-size: 80%; }
.p_att		{ margin-left: 10%; margin-right: 10%; color: red; font-weight: bold; }
.p_code_head	{ margin-left: 5%; margin-top: 0; margin-bottom: 0; padding: 5px; width: 90%; font-family: "Courier New", monospace; background-color: #aaaaaa; font-weight: bold; color: white; }
.p_code_body	{ margin-left: 5%; margin-top: 0; margin-bottom: 0; padding: 5px; width: 90%; font-family: "Courier New", monospace; background-color: #f0f0f0; }
.p_code		{ margin-left: 5%; margin-top: 0; margin-bottom: 0; padding: 5px; width: 90%; font-family: "Courier New", monospace; background-color: #f0f0f0; }
.s_code		{ font-family: "Courier New"; background-color: #f0f0f0; }
.s_str		{ font-family: "Courier New"; color: blue; font-weight: bold; }
.s_comment	{ color: navy; font-style: italic; }
.s_preprocessor	{ color: green; }
a		{ color: #000077; text-decoration: underline; }
a:link		{ color: #0000ff; text-decoration: underline; }
a:visited	{ color: #000077; text-decoration: underline; }
a:active	{ color: #6666ff; text-decoration: underline; }
a:hover		{ color: #ff6666; text-decoration: underline; }
a.toc		{ color: #000077; text-decoration: none; }
a.toc:link	{ color: #0000ff; text-decoration: none; }
a.toc:visited	{ color: #000077; text-decoration: none; }
a.toc:active	{ color: #6666ff; text-decoration: none; }
a.toc:hover	{ color: #ff6666; text-decoration: none; }
a.nav		{ color: #000077; font-weight: bold; text-decoration: none; }
a.nav:link	{ color: #0000ff; font-weight: bold; text-decoration: none; }
a.nav:visited	{ color: #000077; font-weight: bold; text-decoration: none; }
a.nav:active	{ color: #6666ff; font-weight: bold; text-decoration: none; }
a.nav:hover	{ color: #ff6666; font-weight: bold; text-decoration: none; }
.cond		{ color: blue; }
.const		{ color: #222222; }
.func		{ color: #111111; }
</style>
</head>
<body>
<div class=pagecontent>
<p>
<a name=supp_History2 class=sheader></a><h3>A6.2. Test Stages</h3>
<a href="History18.htm#supp_History2">A.6.2.1. Test Stages (3.18.0 side-branch)</a><br/>
<pre class=narration>
00	Comment-layout was redone to make comments conspicuous to "grep" and other search utilities.
	Elimination of parameter comments for ae_{vector,matrix} and replacement by pointer typedefs {B,C,R,Z}{Vector,Matrix}.
	Indent was used to normalize the layout.
01	The original version: ALGLIB 3.15.0.
	Many of the revisions described in the previous section were implemented here and in the previous stage.
02	The allocation counters were fully turned on.
03	The RComm-related structures removed and replaced by an integer "stage" variable; the AutoS macro added (for "static Thread_local").
04	The FP operations removed, except for the FP comparison operations.
05	The FP comparison operations replaced by macros that directly invoke the floating point operators {==,!=,&lt;,&lt;=,&gt;,&gt;=} with the optimization bug fixed;
	this requires repairing a flaw in GCC on x86_64 platforms and possibly elsewhere.
06	*_clear(), *_destroy() merged into *_free(); and *_init_copy() renamed *_copy().
07	The state structure removed, except the frame pointers --
	to regain thread-safety will require making TopFr, CurMsg, CurFlags, CurBreakAt thread-local;
	(but multi-threadedness is not officially part of the non-commercial distribution).
08	The frame base removed from the state structure; it is block-level static and compile-time fixed and does not need to be made thread-safe.
	The relevant parts of the Ap.cpp and Ap.h files were rewritten.
09	The state structure has been emptied.
10	The state structure has been removed.
11	The extra xparams are removed. They are only relevant for the commercial version.
12	The object classes were partially reduced: DiffEquations.{cpp,h} only.
13	The object classes were fully reduced (which invalidates TestZ).
14	TestZ was changed to reflect the update.
15	Normalized the "This"/"Obj" entries in the object class definitions.
16	Wrapped the ConstT, TryCatch() and TryX code; and redid the reinterpret_cast and const_cast items in the alglib namespace code.
17	Wrapped up the New{Obj,Vector,Matrix,Block}/RefObj/Dup{Vector,Matrix} code; _Type_{init,copy,free}() renamed Type_{init,copy,free}().
18	The FP comparison macros were removed.
19	Normalized the RCOMM routines, and the *mcsrch() routines, into this form.
	Remade *mcsrch(...,&amp;stage) into a boolean that returns the condition stage != 0.
	The state variable is made to revert to -1 upon exit.
	Removed the ae_len_v function.
	Normalized comparison operators in loops and &amp;X[0] to X (except in 1 place in Ap.cpp).
20	Normalized other routines that have the same form as the RCOMM routines
	LinAlg.cpp: rcond_rmatrixestimatenorm, rcond_cmatrixestimatenorm
	Remade rcond_rmatrixestimatenorm(n,v,x,isgn,&amp;est,&amp;kase) into a boolean that returns the condition kase != 0.
	Remade rcond_cmatrixestimatenorm(n,v,x,&amp;est,&amp;kase,isave,rsave) into booleans that return the condition kase != 0.
	Removed the thread-local variables from v, isgn (which were originally both expanded inside the routine to hold them)
	Removed isave and rsave, rcond_internalcomplexrcond{save,load}all and removed the need for them.
21	Added in the SetVector(), SetMatrix() and SetObj() macros.
22	Recoded {r,c}matrixgemm[rec] in LinAlg.cpp to increase efficiency
	Removed the pexec (parallelism) stubs and replaced the in-line dead code by comments "[wW]as activated if:"
	They are only relevant for the commercial version.
	Reformatted TestC and changed the error-reporting conditions from !silent to !silent || errors.
	Reformatted the layout to combine the type/object section with function section in each namespace.
	CurErr made file-scope local with suitable redefinitions of set_error_flag() and ap_error().
	Reformatted TestC.cpp
23	Restored the 1D layer RBF test ... but with the delta-threshold raised from 0.35 to 0.45.
	A low probability of failure exists; error ratios as high as 0.42 have been seen.
24	Reordered minlm_lmprepare() to follow minlmsetcond() in the minlmcreate*() routines.
	Rewrote parts of:
	-	testdforestunit_basictestallsame() and testdforestunit_basictestrandom() in TestC.cpp.
	-	dforest_processvotingresults() in DataAnalysis.cpp
	to make them consistent with dfavgce() in DataAnalysis.cpp.
	Remade ae_cpuid() as an initialization routine and replaced it by CurCPU.
25	Separated the subpackages
26	3.16.0 upgrade
	Corrected a long-standing hidden bug testablasunit_testsyrk() in TestC.cpp: cct was initialized with itself, instead of with the transpose of cc.
	All of the extra infrastructure for internal tracing and timing, added in ALGLIB starting with version 3.16.0, has been kept out of ALGLIB++.
27	Normalized the Makefile
	Minor change in Ap.cpp.
28	Conversions of assignment expressions to update operators (++X, --X, X++, X--, X op= Y), where applicable.
29	Normalization of conditionals and layout.
30	In-line some of the alglib:: object member functions.
	Topological sorting of internal routines &amp; commenting out or eliminating dead-code and vestigial code from the commercial version.
	Normalized the RCOMM interface.
	Synthesized new routines, [ae_]randombool(), [ae_]randommid() and generalized versions of existing routines: ae_complex_from_d().
31	Synthesized new routines for real and complex approximate comparisons: {Near,Small}[At]{R,CR,C}().
	Normalized comparisons |A-B|/C &ge; D to |A-B| &ge; C&times;D, for C &ge; 0; possibly removing hidden bugs as a result.
	Normalized most error flags in TestC.cpp to *Ok and *Erred.
32	Corrected the Manual entry for "autogkintegrate" (it originally listed the entry for "odesolversolve").
	Corrected "ASCI" to "ASCII" and "#alglib_packages" to "#alglib_main" (mistakes inherited from the original ALGLIB manual).
	The revision was done earlier, up front.
	Corrections in the comments &amp; printouts; e.g.
		"launcn" → "launch", "traling" → "trailing", "trainig" → "training", "i.e \." → "i.e.", "i.e" → "i.e.",
		"inself" → "itself", "it's" → "its", "discripancy" → "discrepancy", "strucure" → "structure", "is't" ⇒ "isn't",
		"⋯intial⋯" → "⋯initial⋯", "lentgh" → "length", "loosing" → "losing", "Additonally" → "Additionally",
		"VIMP⋯" → "VIPM⋯", "fileds" → "fields", "ouput" → "output", "paremeter" → "parameter", "poportional" → "proportional".
		"info" → "information", to prevent confusion with any variables of the same name.
	Normalized all test routines and flags in TestC.cpp to true on success, false on failure.
	Normalized comparisons (A-B)/C &ge; D to A-B &ge; C&times;D, for C &ge; 0; removing a hidden bug in the PCA test in TestC.cpp.
	First round of normalization of comments &amp; documentation.
33	Further cleanup of unused/stub/legacy code from ALGLIB:
	Normalized test routines and flags in Test{X,Z}.cpp to *Ok; and true on success, false on error.
	Merge {b,i,r}{vector,matrix}setlengthatleast() into {vector,matrix}setlengthatleast().
	Removed aresameboolean(); already subsumed by "==";
	Normalized boolean comparisons, e.g. A&amp;&amp;B || !A&amp;&amp;!B &rArr; A == B
	Removed ae_never_call_it(): it's a legacy stub from the Commercial version of ALGLIB.
	Removed countdown(): it is unused.
	Removed ivectorappend(): it is unused.
	Removed maxreal3(); it's a duplicate of rmax3().
	Removed boundval(): it's a duplicate of rboundval().
	Normalization of structs and unions to C++ (embedded unions made anonymous; redundant typedefs removed).
	(Redefined the {B,C,R,Z}{Vector,Matrix} typedefs as structures, instead of as pointers.)
	Combined (the empty) ae_serializer_clear() into ae_serializer_stop() ― the two are always called together.
	Removed unsetintegerarray(), unsetrealarray(): they are duplicates of SetVector().
	Removed unsetrealmatrix(): it's a duplicate of SetMatrix().
	Made ae_vector_wrapper::c_ptr(), ae_matrix_wrapper::c_ptr() in-line in Ap.h and removed them from Ap.cpp.
	The declarations of ae_vector_wrapper::ae_vector_wrapper() and ae_vector_wrapper::operator=() in Ap.h were removed - unused.
	The declarations of ae_matrix_wrapper::ae_matrix_wrapper() and ae_matrix_wrapper::operator=() in Ap.h were removed - unused.
	The output parameters in ae_serializer_unserialize_{bool,int,int64,double} were remade into return values.
	The parameter type in ae_shared_pool_is_initialized() was raised from (void *) to (ae_shared_pool *).
	Changed the return type of ae_stream_{reader,writer} to bool; normalized them to true on success, false on failure.
	Changed cpp_{reader,writer} in Ap.cpp similarly.
	Redefined the ae_datatype typedef as the (previously unnamed) enum for DT_{BOOL,BYTE,INT,REAL,COMPLEX}.
	Converted multi-branch statements involving DT_* into switch statements.
	Moved the AE_SM_* constants from Ap.cpp to Ap.h, remaking them into an enum type ae_sermode_t.
	Redeclared serializer::mode as type ae_sermode_t.
	Converted multi-branch statements involving AE_SM_* into switch statements.
	Made the following (local) routines in Ap.cpp "static" and topologically sorted them:
		_ialglib_{rmv,cmv,mcopyblock,pack_n2,mm22,mm22x2}_sse2()
		ae_str2{bool,int,int64,double}(), ae_{bool,int,int64,double}2str()
		my_stricmp() filter_spaces() str_{vector,matrix}_create()
		parse_{bool,int,real,complex}_delim() _parse_real_delim() arraytostring()
	Made all _alglib* global variables in Ap.cpp static.
	Inverted my_stricmp() into a bool-returning function and renamed it strimatch().
	Remade CPU_SSE2 = 1 in Ap.h into an enum typedef ae_cpuid_t.
	Lifted the return type of ae_cpuid() in Ap.cpp and the type of CurCPU to ae_cpuid_t.
	Moved i{min,max}2(), imin3(), {i,r}max3(), rmaxabs3(), {i,r}boundval() from AlgLibInternal.{cpp,h} to Ap.{cpp,h}.
	Removed ae_{min,max}int(): they are duplicates respectively of i{min,max}2().
	Renamed ae_minreal() as rmin2() and ae_maxreal() as rmax2().
	Removed the unused or redundant types s{boolean,integer,real,complex}[array] from AlgLibInternal.{cpp,h};
	Converted sinteger ⇒ ae_int_t, sreal ⇒ double, srealarray ⇒ RVector;
	Redefined and replaced srealarray_{init,copy,free} by RVector_{init,copy,free}.
	Removed inttoreal() from AlgLibInternal.{cpp,h} ― it's unused and duplicates the typecast function double().
	Removed countnz{1,2}() from AlgLibInternal.{cpp,h} ― they are unused.
	Removed idivup() from AlgLibInternal.{cpp,h}; replacing idivup(a,b) by the operation (a + b - 1) / b (restored it in version 3.19.0 on up).
	Removed rmul{2,3}() from AlgLibInternal.{cpp,h}; replacing rmul2(a,b) by (double)a * b, rmul3(a,b,c) by (double)a * b * c.
	Removed rmul4() from AlgLibInternal.{cpp,h}; replacing rmul4(a,b,c,d) by (double)a * b * c * d (appeared in version 3.19.0 on up).
34	Preliminary work for the inclusion of a new multi-threading / concurrency core.
	OS-dependent low-level lock routines in Ap.cpp are consolidated.
	Consolidation of all system-dependent routines for locks and threads in Test{C,X}.cpp and Ap.{cpp,h}.
	―	mutex-related system-dependent primitives are encapsulated in TestC.cpp.
	―	thread-related system-dependent primitives are encapsulated in Test{C,X}.cpp; some of them are tied to Ap.{cpp,h}.
	Still deciding on the multi-threading/concurrency architecture to devise and use.
	Assessing different implementations of the Pi Calculus as candidates.
	Further distancing from C to C++: AE_USE_CPP and AE_USE_CPP_BOOL are assumed and locked in.
	AE_USE_CPP_SERIALIZATION and AE_USE_CPP_ERROR_HANDLING are assumed, but left intact.
	Consolidation of all system-dependent routines for locks and threads in Test{C,X}.cpp and Ap.{cpp,h}.
	―	Synthesis of alglib_impl::ae_count_cores()
	Made all _alglib* global variables in Ap.cpp static.
	eternal_malloc() embedded in ae_init_lock_eternal() and eliminated.
	ae_init_lock_eternal(ae_lock *lock) combined into ae_init_lock(ae_lock *lock, bool make_automatic) as:
	―	ae_init_lock(ae_lock *lock, bool is_static, bool make_automatic);
	with
	―	is_static = true, make_automatic = false for ae_init_lock_eternal(),
	―	is_static = false for ae_init_lock().
	Renamed ae_lock::eternal ae_lock::is_static.
	OWN_CALLER, OWN_AE remade into boolean (OWN_CALLER = false, OWN_AE = true)
	{x_string,x_vector,x_matrix}::owner redefined from enum { OWN_CALLER, OWN_AE } to boolean.
	ae_{vector,matrix}_wrapper::is_frozen_proxy inverted and renamed ae_{vector,matrix}_wrapper::owner.
	AE_{{,PARALLEL_}SINGLECORE,{SEQUENTIAL_,PARALLEL_}MULTICORE} remade into an enum; AE_NOENV = 0 added.
	AE_TEST renamed into a constant TestEnv as declared as the enum type.
	Multi-branch #if conditionals for the enum made into switch statements.
	Remade both sets of debug flags
	―	_ALGLIB_USE_{ALLOC_COUNTER,DBG_COUNTERS,VENDOR_KERNELS}
	―	_ALGLIB_VENDOR_MEMSTAT
	―	_ALGLIB_DEBUG_WORKSTEALING
	―	_ALGLIB_WSDBG_{NCORES,PUSHROOT_{OK,FAILED}}
	―	_ALGLIB_SET_{GLOBAL_THREADING,NWORKERS}
	―	_ALGLIB_GET_{ALLOC_COUNTER,CUMULATIVE_ALLOC_{SIZE,COUNT},CORES_COUNT,GLOBAL_THREADING,NWORKERS}
	into an enum debug_flag_t, renaming and merging them where they overlap
	Renamed ae_set_dbg_flag() as ae_set_dbg_value() - as indicated in the comments in ALGLIB.
	Converted all multi-branch statements involving debug_flag_t into switch statements.
	Raised the prototypes of ae_[sg]et_dbg_value() to:
	―	void ae_set_dbg_value(debug_flag_t flag_id, ae_int64_t flag_val);
	―	ae_int64_t ae_get_dbg_value(debug_flag_t id);
	Removed pythag2() from AlgLibInternal.{cpp,h} - it is a duplicate of safepythag2(); replaced pythag2() in LinAlg.cpp by safepythag2().
35	References to MinCGSetGradientCheck() in the comments removed.
	The *SetGradientCheck() functions have almost all been replaced by OptGuard functions in version 3.16.0.
	Reorder Ap.{cpp,h} &amp; reconcile with the internal version of AlgLib.
	―	Remade AE_LOCK_ALIGNMENT, AE_LOCK_CYCLES, AE_LOCK_TESTS_BEFORE_YIELD into integer contants local to Ap.cpp.
	―	Remade _ALGLIB_FLG_THREADING_MASK, _ALGLIB_FLG_THREADING_SHIFT as manifest constants local to Ap.cpp.
	―	The constants DynBottom, DynFrame made local in Ap.cpp
	―	ae_db_attach(), ae_break(), ae_optional_atomic_{add,sub}_i(), ae_yield(),
		x_is_symmetric(), x_is_hermitian(), x_force_symmetric(), x_force_hermitian(),
		aligned_extract_ptr(), ae_matrix_update_row_pointers(),
		ae_static_malloc(), ae_static_free(),
		ae_sixbits2char(), ae_char2sixbits(), ae_threebytes2foursixbits(), ae_foursixbits2threebytes()
		all made local to Ap.cpp.
	―	ae_never_change_it, _sixbits2char_tbl[], _ae_char2sixbits_tbl[] in Ap.cpp made local respectively to ae_spin_wait(), ae_sixbits2char() and _ae_char2sixbits().
	―	_ialglib_vzero(), _ialglib_vzero_complex(),
		_ialglib_vcopy(), _ialglib_vcopy_complex(), _ialglib_vcopy_dcomplex(),
		_ialglib_mcopyblock(), _ialglib_mcopyunblock(), _ialglib_mcopyblock_complex(), _ialglib_mcopyunblock_complex(),
		_ialglib_mv_32(), _ialglib_rmatrixger() made local in Ap.cpp,
		_ialglib_rmv(), _ialglib_rmatrixgemm(), _ialglib_rmatrixrighttrsm(), _ialglib_rmatrixlefttrsm(),
		_ialglib_cmv(), _ialglib_cmatrixgemm(), _ialglib_cmatrixrighttrsm(), _ialglib_cmatrixlefttrsm(),
		_ialglib_rmatrixsyrk(), _ialglib_rmatrixrank1(),
		_ialglib_cmatrixherk(), _ialglib_cmatrixrank1()
		all made local to Ap.cpp.
	―	_dbg_alloc_total, _use_dbg_counters, _use_vendor_kernels
		debug_workstealing, dbgws_pushroot_ok, dbgws_pushroot_failed
		all made local in Ap.cpp.
	―	x_nb, alglib_simd_alignment
		alglib_r_block, alglib_half_r_block/2, alglib_twice_r_block,
		alglib_c_block, alglib_half_c_block/2, alglib_twice_c_block
		all remade as ae_int_t constants.
	―	alglib::ByteOrder made local in Ap.cpp and commented out (it's not used).
	―	Combined the threading model names AE_{SERIAL_UNSAFE,SERIAL,PARALLEL}
		and flags _ALGLIB_FLG_THREADING_{USE_GLOBAL,SERIAL,PARALLEL} into {Non,Ser,Par}TH.
	―	Replaced the threading flag names "xdefault, "serial" and "parallel" respectively by NonTH, SerTH and ParTH.
	―	Removed x_string from Ap.h - it is not used anywhere.
		Removed ALIGNED from Ap.h - it is not used anywhere else, other than in x_string.
	―	CSV_DEFAULT, CSV_SKIP_HEADERS definitions in Ap.h moved to Ap.cpp and reduced in Ap.h to declarations.
	―	Removed ae_check_zeros(); placing, instead, the responsibility for zero-initialization into the constructor wrappers.
	―	Synthesized the constructor macro NewSerializer().
36	Second round of normalization of comments &amp; documentation: reduced the 4-fold redundancy in header-comments.
	―	For programmers maintaining/revising the library:
		header-comments for the high-level iteration routines and DefClass() definitions, for now, are left in the alglib namespace in *.cpp.
		header-comments are confined, in all other cases, to the implementation routines the alglib_impl namespace in *.cpp.
	―	For programmers using the API: a copy of the comments is in the manual section.
	First round of normalization of iteration routines.
	―	Made logit_{xtol,ftol,gtol,maxfev,stpmin,stpmax}, in DataAnalysis.cpp, local to logit_mnlmcsrch() and removed the logit_ prefix.
	―	Made linmin_{ftol,xtol,maxfev,defstpmax), in AlgLibInternal.cpp, local to mcsrch() and removed the linmin_ prefix.
	―	Merged the locals linmin_mcstep() in AlgLibInternal. and logic_mnlmcstep() in DataAnalysis.cpp into a global mcstep() in AlgLibInternal.{cpp,h}
	For parameter declarations:
	∙	For iteration and [un]serializer routines, the documented and declared versions match.
	∙	For the user-supplied functions in the iteration routines and their high-level versions, the documented and declared versions also match.
	∙	Output parameters X of type T are documented and declared respectively as:
		―	T &amp;X	⇔	T &amp;X
	∙	Input parameters X of type T are documented and declared respectively as:
		―	T X	⇔	const T X	― for scalar types T ∈ { bool, ae_int_t, double, complex },
		―	T X	⇔	const T &amp;X	― for all other types T.
	Manual.htm: The documentation of the following 1D and 2D array argument parameters was changed from output (T &amp;X) to input (T X) to match its declaration (const T &amp;X).
	∙	a	rmatrixenforcesymmetricity, rmatrixger, spdmatrixcholeskyupdate{add1,fix}[buf], xdebug{b{1,2}not,{c,i,r}{1,2}neg}
	∙	b	rmatrix{[gen]copy,transpose}, {r,c}matrix[lu]solve[m]fast, rvectorcopy, {h,s}pdmatrix[cholesky]solve[m]fast
	∙	c	cmatrixherk, {r,c}matrix{gemm,syrk}
	∙	tmp	rmatrixsyvmv
	∙	x	{r,c}matrix{left,right}trsm, rmatrixtrsv, sparsetr{m,s}v
	∙	xy	rankdata[centered]
	∙	y	rmatrix[ge,sy]mv, sparsegemv
	The xy parameters in the reduced forms of rankdata[centered]() were changed to input, to match the declaration of xy in the full form.
	∙	void rankdata(real_2d_array &amp;xy);	⇒ void rankdata(const real_2d_array &amp;xy);
	∙	void rankdatacentered(real_2d_array &amp;xy);	⇒ rankdatacentered(const real_2d_array &amp;xy);
	Other minor changes in the documentation &amp; Comments:
	∙	sparsesmm(): A is M × K, not N × K.
	∙	sparsecholeskyskyline(): "matrixm" → "matrix"
37	Recoding of internal and non-API routines.
	∙	AlgLibInternal.{cpp,h}: swapb(), swapc() added.
		―	swap{b,i,r,c}() synthesized in numerous places.
		―	Non-API routine mcsrch(): Redeclared "double *f" as an input-only parameter "double f".
		―	Non-API routine tiledsplit(tasksize, tilesize, &amp;task0, &amp;task1)
			redefined as task0 = tiledsplit(tasksize, tilesize), task1 = tasksize - task0;
		―	Non-API routine splitlength(tasksize, chunksize, &amp;task0, &amp;task1)
			redefined as task0 = splitlength(tasksize, chunksize), task1 = tasksize - task0;
		―	Non-API routine splitlengtheven(tasksize, &amp;task0, &amp;task1)
			redefined as task0 = splitlengtheven(tasksize), task1 = tasksize - task0;
		―	Non-API routine sortmiddlei() removed and replaced by its duplicate tagsortmiddlei() [newly added to version 3.17.0].
		―	Non-API routines tagsortmiddleir(), tagsortmiddlei() redeclared with default offset = 0, and recoded.
			Non-API routine tagsortmiddleii() (add in version 3.19.0) redeclared with default offset = 0, and recoded.
			Declarations changed from tagsortmiddle*(a, b, offset, n) to tagsortmiddle*(a, b, n, offset = 0).
		―	Non-API routines tagsortfast[ir]() recoded.
		―	Local routines tsort_tagsortfast[ir]rec() recoded.
		―	Local routine tsort_tagsortfastirec(a, b, bufa, bufb, i1, i2)
			redefined as tsort_tagsortfastirec(a-&gt;xR + i1, b-&gt;xZ + i1, bufa-&gt;xR + i1, bufb-&gt;xZ + i1, i2 - i1 + 1)
		―	Local routine tsort_tagsortfastrrec(a, b, bufa, bufb, i1, i2)
			redefined as tsort_tagsortfastrrec(a-&gt;xR + i1, b-&gt;xR + i1, bufa-&gt;xR + i1, bufb-&gt;xR + i1, i2 - i1 + 1)
		―	Local routine tsort_tagsortfastrec(a, bufa, i1, i2)
			redefined as tsort_tagsortfastrec(a-&gt;xR + i1, bufa-&gt;xR + i1, i2 - i1 + 1)
		―	Localized static constant linmin_armijofactor to the routine it is used in,
			and removed the "linmin_" prefix.
		―	All of the routines in the FTBASE package were recoded.
		―	Non-API routine ftapplyplan(&amp;plan, &amp;buf, offset, reps) redeclared with default offset = 0 and reps = 1, and recoded.
		―	Local routines ftbase_ftpushentry{2,4}() combined with ftbase_ftpushentry() by making defaults eparam1 = -1, eparam2 = 0, eparam3 = 0.
		―	Local routine(s) ftbase_ftpushentry*(plan, &hellip;) redefined as ftbase_ftpushentry*(&amp;plan-&gt;entries, &hellip;).
		―	Local routine ftbase_fftirltrec(a, astart, astride, b, bstart, bstride, m, n)
			redefined as ftbase_fftirltrec(a-&gt;xR + astart, astride, b-&gt;xR + bstart, bstride, m, n).
		―	Local routine ftbase_ffticltrec(a, astart, astride, b, bstart, bstride, m, n)
			redefined as ftbase_ffticltrec(a-&gt;xR + astart, astride, b-&gt;xR + bstart, bstride, m, n).
		―	Local routine ftbase_internalcomplexlintranspose(a, n, m, astart, buf)
			redefined as ftbase_internalcomplexlintranspose(a-&gt;xR + astart, n, m, buf).
		―	Local routine ftbase_ftapplycomplexcodelettwfft(a, offs, args, n, mun)
			redefined as ftbase_ftapplycomplexcodelettwfft(a-&gt;xR + offs, args, n, mun).
		―	Local routine ftbase_ffttwcalc(a, aoffset, n1, n2)
			redefined as ftbase_ffttwcalc(a-&gt;xR + aoffset, n1, n2).
		―	Local routine ftbase_ftapplycomplexreffft(a, offs, args, n, mun, buf)
			redefined as ftbase_ftapplycomplexreffft(a-&gt;xR + offs, args, n, buf).
			The mun == 2 assertion is placed outside and before the call.
		―	Local routine ftbase_ftapplycomplexcodeletfft(a, offs, args, n, mun)
			redefined as ftbase_ftapplycomplexcodeletfft(a-&gt;xR + offs, args, n).
			The mun == 2 assertion is placed outside and before the call.
		―	Local routine ftbase_ftbluesteinsfft(plan, a, abase, aoffset, ⋯, bufa, bufb, bufc, bufd)
			redefined as ftbase_ftbluesteinsfft(plan, a-&gt;xR + abase + aoffset, ⋯, bufa, bufc).
		―	Local routine ftbase_ftradersfft(plan, a, abase, aoffset, ⋯, buf)
			redefined as ftbase_ftradersfft(plan, a-&gt;xR + abase + aoffset, aoffset, ⋯, buf).
		―	Local routine ftbase_ftapplysubplan(plan, subplan, a, abase, aoffset, buf, repcnt)
			redefined as ftbase_ftapplysubplan(plan, subplan, a-&gt;xR + abase + aoffset, aoffset, buf, repcnt).
		―	Local routine ftbase_ftprecomputebluesteinsfft(n, m, precr, offs)
			redefined as ftbase_ftprecomputebluesteinsfft(n, m, precr-&gt;xR + offs).
		―	Local routine ftbase_ftprecomputeradersfft(n, rq, riq, precr, offs)
			redefined as ftbase_ftprecomputeradersfft(n, rq, riq, precr-&gt;xR + offs).
	∙	AlgLibMisc.cpp:
		―	Local routine nearestneighbor_kdtreesplit()
			redefined with the output-only parameter "ae_int_t *i3" remade a return value.
		―	Synthesized new API routine hqrndmiduniformr() = 2 hqrnduniformr() - 1.
	∙	DataAnalysis.cpp:
		―	Local routine logit_mnlmcsrch(): Redeclared "double *f" as an input-only parameter "double f".
		―	Local boolean routine ssa_hassomethingtoanalyze(): reversed, renamed ssa_isdegenerate() and recoded.
	∙	Statistics.{cpp,h}:
		―	Local routines correlationtests_spearmantail{5,6,7,8,9}() eliminated and substituted into correlationtests_spearmantail(),
			and correlationtests_spearmantail() recoded.
		―	Local routine jarquebera_jarqueberastatistic() eliminated and substituted into jarqueberatest(),
			and jarqueberatest() recoded.
		―	Local routine jarquebera_jbcheb() eliminated and substituted into jarquebera_jbtbl*(),
			and jarquebera_jbtbl*() recoded.
		―	Local routine jarquebera_jarqueberaapprox() recoded.
		―	API routine jarqueberatest() recoded.
		―	Local routine wsr_wcheb() eliminated and substituted into wsr_w{25,26,...,200}(), wsr_wsigma() recoded.
		―	wsr_w*() recoded.
	∙	SpecialFunctions.{cpp,h}:
		―	Synthesized internal constants for the Euler constant, π/2 and √2.
		―	Minor changes in the layout of the conditional code in gammafunction() and lngamma().
		―	Compilation of the local function gammafunc_gammastirf() made conditional to !defined ALGLIB_INTERCEPTS_SPECFUNCS.
		―	Synthesized local routines erfr0(), erfr1() and recoded errorfunction[c](), normal{cdf,distribution}() using them to remove recursive calls.
		―	Synthesized local routines inverfr0(), inverfr1(), inverfr2() and recoded invnormal{cdf,distribution}() and inverf() using them.
		―	Recoded sinecosineintegrals().
		―	Local routine trigintegrals_chebiterationshichi() eliminated and substituted into hyperbolicsinecosineintegrals(),
			hyperbolicsinecosineintegrals() recoded.
		―	Local routines bessel_besselm{first,next}cheb() eliminated and substituted into besseli0().
		―	Local routines bessel_besselm1{first,next}cheb() eliminated and substituted into besseli1(), besselk0(), besselk1().
		―	Local routines bessel_besselasympt{0,1}(x, ⋯) recoded and redefined as bessel_besselasympt{0,1}(8.0/x, ⋯).
		―	API routines besseli{0,1}(), bessel{j,y,k}{0,1,n}() recoded.
	∙	Optimization.cpp:
		―	optserv_feasibilityerrorgrad(): remade "double *err" into a return value.
		―	localized most static constants that are used in only one routine to the routines they are used in,
			and removed the prefixes (e.g. cqmodels_newtonrefinementits → newtonrefinementits).
	∙	Solvers.{cpp,h}:
		―	lincgsetb() added to the API.
	∙	LinAlg.{cpp,h}:
		―	rmatrix{transpose,copy}(): removed "const" from "real_2d_array &amp;b" to match "b" in cmatrix{transpose,copy}().
		―	rmatrixmv(): removed "const" from "real_1d_array &amp;y" to match "y" in cmatrixmv().
		―	Non-API routine rmatrixqrbasecase() removed from LinAlg.h, made local to LinAlg.cpp, renamed ortfac_rmatrixqrbasecase().
		―	Non-API routine spdmatrixcholeskyinverserec() removed from LinAlg.h, made local to LinAlg.cpp, renamed matinv_spdmatrixcholeskyinverserec().
		―	Non-API routine ablascomplexsplitlength(a, n, &amp;n1, &amp;n2) redefined as n1 = ablascomplexsplitlength(a, n), n2 = n - n1;
		―	Non-API routine ablassplitlength(a, n, &amp;n1, &amp;n2) redefined as n1 = ablassplitlength(a, n), n2 = n - n1;
		―	Local routine ablas_ablasinternalsplitlength(n, nb, &amp;n1, &amp;n2) redefined as n1 = ablas_ablasinternalsplitlength(n, nb), n2 = n - n1;
	∙	Manual.htm:
		―	rmatrix{transpose,copy}(): redeclared b an output parameter, to match the declaration on cmatrix{transpose,copy}().
		―	rmatrixmv(): redeclared y an output parameter, to match the declaration in cmatrixmv().
		―	lincgsetb(): added to the API and newly documented.
		―	hqrndmiduniformr(): added to the API and newly documented.
		―	ssaforecastsequence() documentation: the Data parameter is array[DataLen], not array[NTicks].
	∙	Interpolation.cpp:
		―	Moved spline1dfitpenalized[w]() from INTCOMP back into SPLINE1D.
		―	localized most static constants that are used in only one routine to the routines they are used in,
			and removed the prefixes (e.g. spline1d_lambdareg → lambdareg).
		―	spline1d_spline1dgriddiffcubicinternal():
			removed "RVector *dt", it's not used by any of routine's callers,
			replaced its use inside the routine by d, since it was copied to d after being assigned to.
		―	Local routine spline1d_diffthreepoint() in-line substituted into spline1dbuildakima() and removed,
			and spline1dbuildakima() recoded.
		―	spline1dconvdiffinternal():
			remade the non-API routine into static local.
			remade "RVector *y", "RVector *d1", "RVector *d2" into optional output parameters.
			eliminated "bool needy", "bool needd1", "bool needd2" respectively in favor of (y != NULL), (d1 != NULL) and (d2 != NULL).
		―	spline3d_spline3ddiff(): remade "double *fx", "double *fy", "double *fxy" into optional output parameters.
		―	rbf_clearreportfields(): removed and inserted inline at its point of use.
38	Integration of version 3.17.0.
	Minor corrections in TestC.cpp:
	∙	Removed duplicate initialization of x in the &quot;Test CG solver&quot; loop of testfbls().
	∙	Dangling references to &quot;isupper&quot; in sparserealcholeskytest() resolved.
	∙	Dangling reference to &quot;solvertype&quot; in testminlpunit_singlecalltests() resolved.
39	Integration of version 3.18.0.
	Replaced the ‟Local” #define in Test.cpp by ‟static”.
	Ap.{cpp,h}: Uniformized the translator-generated names across namespaces:
	―	ae_machineepsilon → machineepsilon, ae_pi → pi,
	―	ae_maxrealnumber → maxrealnumber, ae_minrealnumber → minrealnumber,
	―	ae_c_abs → abscomplex, ae_complex → complex, ae_c_conj → conj, ae_c_sqr → csqr,
	―	ae_sign → sign, ae_sqr → sqr,
	―	ae_iceil → iceil, ae_ifloor → ifloor, ae_round → round, ae_trunc → trunc,
	―	ae_maxreal → maxreal, ae_minreal → minreal,
	―	ae_maxint → maxint, ae_minint → minint,
	―	ae_get_cores_to_use → getnworkers, ae_set_cores_to_use → setnworkers, ae_set_error_flag → set_error_flag,
	―	ae_randommid → randommid, ae_randomreal → randomreal,
	―	ae_randombool → randombool, ae_randominteger → randominteger,
	―	ae_tickcount → tickcount,
	―	ae_complex_from_{i,d,c} → complex_from_{i,d,c}.
	Simplified the ‟class” declaration macros, removing EndD and AndD.
	Normalized the typecasts ― removing redundant typecasts, and normalized the layout of the others.
	Removed the CPU initialization for FP-rounding (more recent versions of GCC now seem to handle this right).
	Toplogical re-sorting of routines to match the sorting for version 3.18.0.
	Made inverfr{0,1,2}() static local in SpecialFunctions.cpp.
	Renamed {Round,Trunc,Floor,Ceil}Z() as i{round,trunc,floor,ceil}().
	Replaced i{round,trunc}() by std::{round,trunc}() for floating point types.
	Optimized iround(A,B) as A / B and iceil(A,B) as (A + B - 1) / B for integer types A and B.
	Renamed _ae_{init,acquire,release,free}_lock_raw as _ae_{init,acquire,release,free}_lock.
	Changed xparams into enum { NonTH = 0, SerTH = 1, ParTH = 2 };
39	Continuing stage 37: Recoding of internal and non-API routines.
	AlgLibMisc: Re-coding of HQRND direct from the original reference for the algorithm.
39	Continuing stage 28: conversions of more assignment expressions to update operators (++X, --X, X++, X--, X op= Y).
39	Continuing stage 33: more conversions related to sinteger ⇒ ae_int_t, sreal ⇒ double, srealarray ⇒ RVector.
39	Setting the values of values of global_failure_flag and the return values of main() to EXIT_{SUCCESS,FAILURE}.
39	Possible hidden bug in minbleiciteration() removed (the iteration counter bounds were set wrong).
39	Renamed _ae_core_count() as ae_cores_count().
39	Normalized conditionals (re-fitting changes, here, made in 3.18.0).
39	Further changes to type-casting and properly typed numerals (re-fitting changes, here, made in 3.18.0).
39	Ap.{cpp,h}: Replace ae_impose() by ae_assert(), re-fitting to 3.18.0.
39	Ap.{cpp,h}: Remove valgrind_hint.
39	Ap.{cpp,h}: Re-include the multi-threading stub routines for multi-threading originally in Ap.{cpp,h} for possible future appropriation.
39	Ap.{cpp,h}: Another minor fix to better match 3.18.0.
39	Synthesis of more instances of {Near,Small}[At]{R,C}() (in LinAlg.cpp).
40	Ap.*, Kernels*.*, AlgLibInternal.*, LinAlg.*: Integrating changes made in version 3.18.0.
	∙	Kernels{Avx2,Fma,Sse2}.{cpp,h}: Adding the kernel dispatcher, new to version 3.18.0.
	∙	Ap.{cpp,h}: Updating to version 3.18.0.
	∙	LinAlg.cpp, Ap.{cpp,h}: Integrating the new SPCHOL routines from alglib.3.18.
		and changing one field: spcholanalysis::rowstorage to spcholanalysis::outputstorage.
	∙	AlgLibInternal.cpp, Ap.{cpp,h}: Integrating the new ABLAS routines from alglib.3.18.
40	AlgLibInternal.{cpp,h}: Updating to version 3.18.0.
40	{Ap,AlgLibInternal}.{cpp,h}: Moved ablasf_rgemm32basecase() back into Ap.{cpp,h}, to alleviate the TestX speed issue.
40	AlgLibInternal.{cpp,h}: Adding rmatrixgemmf().
40	Restoring the original RComm flags, in preparation of later normalization of iterative routines.
37	(Continued) Localized more static constants and removed their prefixes.
40	Synchronizing to minor changes made in alglib.3.18.
	∙	Numerals converted to double (in some places only), excesses (double) typecasts eliminated.
	∙	1.0 E n, 1.0 e n converted to numeral form, for n ∈ [-8,+8];
		1.0 e n converted to 1.0 E n most elsewhere outside of comments and strings.
	∙	Optimization.cpp: Reinstated deleted, but commented out, code.
40	Synchronizing changes made to Notes.htm starting with alglib.3.18
	∙	minor corrections,
	∙	a section added for the most recent test run.
0-39	TestC.cpp: Minor changes to sync to 3.18.0.
	∙	Test and sub-test reports and outputs made more uniform.
	∙	Normalized error flags to Ok with the logic set to Ok = success (some were missed in Stage 33).
	∙	Accidental duplication of code in sparserealcholeskytest() removed.
	∙	More double numerals made explicitly so (e.g. 1 ⇒ 1.0).
	∙	More in-line arithmetic (e.g. sqrt(2.0) / 2.0 ⇒ sqrt(0.5)).
	∙	More optimizations of ifloor(X / Y.0) ⇒ X / Y.
	∙	Finally resolved and fixed a bug in testminqpunit_generallcqptest() [a conditional expression was synthesized erroneously].
	∙	testsvdunit_get[bd]svderror(): Corrected the mistake on the "Ok" flag (the logic was erroneously reversed).
40	Notes.htm: Minor correction to an internal link.
40	{Manual,Notes}.htm: Updated the documentation to alglib.3.18.
40	{LinAlg,Solvers,Optimization}.{cpp,h}, TestC.cpp: Integrated the changes made in alglib.3.18.
	Inclusion of the notes for the alglib.3.18 branch might be later added here, but are currently listed separately.
41	Integration of the changes made from version 3.18.0 to version 3.19.0.
	∙	Integration of the core: Ap, AlgLibInternal, Kernels*
	∙	Integration of the remainder: Ap, AlgLibInternal, Kernels* ... at a later time.
	∙	TestC.cpp: a hidden bug was inherited from the distribution version of ALGLIB
		for version 3 RBF routines from somewhere in rbfv3build().
	∙	It has not been resolved; the suppression of the testing errors are tagged as "//@@" in TestC.cpp.
41	Belated changes/corrections from revisions predating 3.20.0.
	∙	Arithmetic-folding that should have been done
		―	Adding prefix + (yes, we actually do so, sometimes!)
		―	Normalizing numerals (e.g. 5.0E-2 ⇒ 0.05)
		―	Compile-time arithmetic (e.g. x ± 0 ⇒ x, 1 * x ⇒ x, 0 * x ⇒ 0, a + b * -1 ⇒ a - b, 5 * 100.0 ⇒ 500.0 etc.)
		―	Grouping/bracketing (e.g. A + (B + C) ⇔ A + B + C, (A &amp;&amp; B) &amp;&amp; C ⇔ A &amp;&amp; B &amp;&amp; C).
	∙	Normalizing comparisons
		―	Near Comparisons; e.g. NearAtR(A, B + C, Epsilon) ⇒ NearAtR(A - B, C, Epsilon), where appropriate,
		―	Complex Comparisons; e.g. !ae_c_neq(A, B) ⇒ ae_c_eq(A, B).
	∙	Extraneous printouts (belatedly) removed.
	∙	(Belated) removal of dead code.
	∙	Normalization of conditionals (e.g. A / B &ge; C ⇒ A &ge; B * C, when B &gt; 0 is known).
	∙	(Belated) normalizaiton of layout (e.g. if (A) { ⋯ break; } if (B) ⋯ ⇒ if (A) { ⋯ break; } else if (B) ⋯.
	∙	Layout of comments and documentation fixed up.
	∙	Routines local in Kernel*.cpp declared as static.
	∙	TestC.cpp: linreg testing - separated out general linear regression tests subset.
42	Integration of structural and layout changes made in 3.20.0.
	∙	Adding and Renaming/redeclaring "Class" constructors/destructors:
		―	ae_init_op: inherited from ae_constructor in ALGLIB 3.20.0.
		―	ae_copy_op: inherited from ae_copy_constructor in ALGLIB 3.20.0.
		―	ae_free_op: inherited from ae_destructor in ALGLIB 3.20.0, and redefined as void (*ae_free_op)(void *, bool).
		―	ae_deallocator: defined as void (*ae_deallocator)(void *), retained in place of ae_destructor for ae_dyn_block and ae_db_swap().
		―	The source pointer in all the *_copy constructors has been made const.
	∙	Conversions of declared types to size_t
		―	size_of_object in ae_shared_pool and ae_shared_pool_set_seed() redeclared as size_t.
		―	size_of_object in ae_smart_ptr and obj_size in ae_smart_ptr_assign redeclared as size_t.
		―	ae_serializer_get_alloc_size() redeclared with return type size_t.
		―	size in ae_db_init() redeclared as size_t.
	∙	Conversions integrated into numeric constants; e.g. 1 → 1.0 or in some places, 1.0 → 1.
	∙	The (randomized) initializations of local variables in iteration routines have all been removed.
		They are (for now) static local variables, which are already initialized to 0.
	∙	Reorder the routines to match the topological sorting for 3.20.0; and fix the vertical layout.
	∙	AlgLibInternal.{cpp,h}, TestC.cpp
		―	Restored unsetintegerarray(), unsetrealarray(): it was changed in 3.20.0 so that it is no longer a duplicate of SetVector().
		―	Restored unsetrealmatrix(): it was changed in 3.20.0 so that it is no longer a duplicate of SetMatrix().
	∙	Creating stubs for the APSTRUCT (AlgLibInternal) and RBFV3FARFIELDS (LinAlg) sub-packages.
		Updating the sub-package dependency list to that of 3.20.0.
42	Proactive changes to 3.20.0:
	∙	LinAlg.cpp: Minor changes in rcond_cmatrixrcond{tr,lu}internal inherited from 3.20.0.
	∙	DataAnalysis.cpp: Minor change in dsoptimalsplit2 inherited from 3.20.0.
	∙	Ap.cpp: Added a alglib_impl::complex → alglib::complex constructor.
		Simplified Complex() to a typecast, using the constructor.
	∙	Ap.cpp: maxconcurrency() inherited from 3.20.0, but moved from APSERV in AlgLibInternal.cpp to Ap.cpp
		as a supplement to (the already-revised) ae_cores_count().
	∙	Ap.cpp: tickcount() redeclared as ae_int_t, instead of as int.
	∙	Ap.cpp: Modified the type-casting in ae_{s,g}et_dbg_value().
42	Update Ap.* to 3.20.0.
	∙	Update the related documentation in Manual.htm.
	∙	Update the calls to ae_smart_ptr_assign() elsewhere (i.e. in TestC.cpp).
	∙	Follow-up revisions made to Ap.{cpp,h} from 3.20.0:
		―	Made ae_rand() and ae_rand_max() local to Ap.cpp.
		―	Made ae_malloc_zero() local to Ap.cpp.
		―	Added a new macro:
			RepObj(Type, P) P = (Type *)ae_malloc(sizeof *P), memset(P, 0, sizeof *P), Type##_init(P, false), ae_smart_ptr_assign(&amp;_##P, P, true, true, sizeof *P, Type##_copy, Type##_free)
			Use P as a temporary before assigning its value to _P.
	∙	TestC.cpp: Update the main and alglibbasics testing units.
42	Update AlgLibInternal.{cpp,h} to 3.20.0.
	∙	Follow-up revisions made to AlgLibInternal.{cpp,h} from 3.20.0:
		―	Remove {b,i,r}case2 functions: they are just the C-conditional expression.
		―	Convert sboolarray ⇒ BVector, sintegerarray ⇒ ZVector
		―	Redefine and replace sboolarray_{init,copy,free} by BVector_{init,copy,free}.
		―	Redefine and replace sintegerarray_{init,copy,free} by ZVector_{init,copy,free}.
	∙	TestC.cpp: Update the tsort testing unit.
42	Update LinAlg.{cpp,h} to 3.20.0.
	Update of the call of spsymmanalyze(), from LinAlg.*, in Optimization.cpp.
42	Update Optimization.{cpp,h} to 3.20.0
	Update TestC.cpp: optserv, minqp, minlp, mlptrain testing units.
	Update Manual.htm accordingly.
42	Update Interpolation.{cpp,h} to 3.20.0
	Update KernelAvx2.{cpp,h} to 3.20.0
	Update TestC.cpp: spline2d, rbf
	Update TestI.cpp accordingly.
	Update Manual accordingly.
42	Update Interpolation.{cpp,h} to 3.20.0
	∙	Follow-up revisions made to Interpolation.{cpp,h}:
		―	usedebugcounters locked in as "false" and removed from struct rbf3fastevaluator and rbfv3_fastevaluatorinit().
		―	dbg{panel,field}2panelcnt, dbgpanelscnt, dbgfarfieldspeedup removed from struct rbf3fastevaluator.
</pre>
</p>
<p>
<a name=supp_History3 class=sheader></a><h3>A6.3. Test Results</h3>
<a href="History18.htm#supp_History3">A.6.3.1. Test Results (3.18.0 side-branch)</a><br/>
The following are the read-outs from TestX, followed by the time-stamp and total testing time from TestC.
The values cited for TestX are for MFLOPS counts for the RGEMM BLAS routine for N&times;N matrices for N = 16, 32, 64 and 1024.
The times, themselves are meaningful only for comparisons on a single host, rather than across different hosts.
In the case of TestX, not all tests were done cleanly (i.e. with background processes disabled), so there may be fluctuations.
<pre class=narration>
01	1555 1946 1958 1875 1552948070 (5c901b66) 232
01	1550 1946 1946 1856
02	1580 1934 1939 1868 1552948674 (5c901dc2) 248
02	1577 1931 1946 1839 1552949228 (5c901fec) 250 // First-restructured version.
02	1550 1938 1946 1861
02	1536 1934 1950 1864
02	1582 1942 1946 1865
02	1563 1938 1935 1864
02	1548 1934 1946 1860
04	1553 1938 1946 1849
04	1558 1949 1954 1874
04	1587 1931 1924 1878
02	1572 1938 1942 1867 1553095988 (5c925d34) 245 // Started over
02	1529 1938 1946 1872
02	1567 1931 1916 1859
03	1580 1949 1950 1873 1553098036 (5c926534) 233
03	1560 1949 1950 1861
03	1548 1946 1950 1858
04	1538 1934 1946 1874 1553099012 (5c926904) 225
04	1531 1938 1942 1865
04	1572 1934 1946 1868
05	1565 1938 1939 1856 1553309815 (5c95a077) 211
06	1587 1949 1946 1873
06	1590 1949 1942 1855 1553329021 (5c95eb7d) 204
07	1590 1946 1942 1846 1553357985 (5c965ca1) 206
08	1473 1916 1931 1853
08	1522 1934 1946 1853
08	1575 1938 1942 1846
09	1582 1942 1946 1834
10	1582 1949 1958 1882 1553372412 (5c9694fc) 205
11	1541 1869 1950 1865 1553382833 (5c96bdb1) 208 // Run with the network active.
11	1560 1942 1942 1855 // Run with the network active.
12	1590 1931 1954 1855
13	1558 1938 1958 1881 // TestZ "fails" because the conditions underlying a part of it have changed.
13	1585 1946 1939 1847 1553450728 (5c97c6e8) 203 // Skipped TestZ.
13	1590 1953 1958 1876 1553454094 (5c97d40e) 200 // Skipped TestZ.
14	1563 1931 1946 1867 1553457101 (5c97dfcd) 197 // TestZ was changed to reflect the new conditions.
14	1590 1953 1958 1853 1553460998 (5c97ef06) 208
14	1560 1946 1950 1859 // Added the ConstT() and TryX macros.
15	1590 1949 1954 1876 1553475423 (5c98275f) 204 // Run with the network active.
16	1553 1934 1942 1861 1553501003 (5c988b4b) 201 // Added the TryCatch macro.
17	1575 1934 1946 1844 1553510964 (5c98b234) 203 // Added the New*, Ref*, Dup* macros.
18	1572 1931 1946 1867 1553517390 (5c98cb4e) 205 // Removed the FP comparison macros.
18	1543 1942 1950 1868 1553550000 (5c994ab0) (15535?????) 205 // Regularized the layout of the modules.
19	1527 1923 1942 1842 // Reformatted the RCOMM routines and [logit_]mcsrch.
19	1543 1905 1939 1865 1553672842 (5c9b2a8a) 200 // 11 TestC tests fail with the revisions.
19	1541 1942 1950 1867 1553681461 (5c9b4c35) 201 // Corrected.
19	1565 1923 1939 1849
20	1541 1939 1942 1867 1553708554 (5c9bb60a) 200
21	1575 1942 1913 1866 1553731148 (5c9c0e4c) 220
22	1595 1916 1954 1879
22	1548 1942 1946 1895 1553905444 (5c9eb724) 199
22	1577 1946 1946 1897 // Minor correction in TestX.cpp.
23	1585 1949 1946 1890 1553932849 (5c9f2231) 199
24	2268 3585 3510 3278 // With -mtune=core2 and -msse2. The machine's cooling fan was activated during the test.
24	2227 3497 3323 3264 // Dropped -mtune=core2 but kept -msse2.
24	2208 3472 3461 3238 1554065184 (5ca12720) 207
24	2208 3485 3461 3307 1554066501 (5ca12c45) 203 // The bugs in the dforest module and tester were repaired.
24	2242 3485 3473 3277 1555921305 (5cbd7999) 205
25	2283 3559 3498 3279 1557611349 (5cd74355) 203
25	2283 3534 3510 3235 1580240643 (5e308f03) 212 // Final fixes in preparation for upgrade to 3.16.0.
25	2299 3559 3510 3243 1580249792 (5e30b2c0) 204 // Final fixes in preparation for upgrade to 3.16.0.
25	2268 3521 3498 3287 1580340998 (5e321706) 200 // Final test of Version 3.15.0.
30	2257 3534 3486 3279 1581358777 (5e419eb9) 202 // Final test of Version 3.15.0 with retrofits.
26	2146 3402 3486 3230 1580248905 (5e30af49) 220 // Version 3.16.0.
26	2294 3449 3522 3247 1580273645 (5e310fed) 212
26	2273 3534 3461 2865 1580343048 (5e321f08) 213
26	2299 3472 3486 3252 1580940186 (5e3b3b9a) 225
27	2257 3509 3449 3262 1581001359 (5e3c2a8f) 218
28	2278 3497 3510 3253 1581027835 (5e3c91fb) // 5 TestC tests failed.
28	2268 3497 3498 3205 1581032293 (5e3ca365) 222 // Corrected.
28	2294 3485 3498 3271 1581033702 (5e3ca8e6) 228 // Modifications, following cross-validation against local version.
29	2268 3460 3461 3193 1581111823 (5e3dda0f) 230 // 1 TestC test failed.
29	2294 3472 3498 3237 1581112921 (5e3dde59) 215 // Corrected.
29	2268 3559 3498 3248 1581201426 (5e3f3812) 234 // Modifications, following cross-validation against local version.
30	2268 3472 3498 3235 1581312636 (5e40ea7c) 213
30	2278 3413 3498 3241 1581556573 (5e44a35d) 216
30	2273 3509 3510 3261 1581634496 (5e45d3c0) 220
30	2299 3437 3486 3262 1581731061 (5e474cf5) 217
30	2283 3437 3414 3240 1581740396 (5e47716c) 224 // Modifications, following cross-validation against local version.
31	2283 3472 3510 3241 1581968963 (5e4aee43) 216
31	2262 3472 3486 3235 1581983401 (5e4b26a9) 209
32	2268 3485 3498 3208 1582670816 (5e55a3e0) 218 // 1 TestC test failed.
32	2257 3572 3498 3246 1582673449 (5e55ae29) 214 // Corrected.
32	2252 3413 3473 3200 1582847620 (5e585684) 213
32	2273 3379 3486 3184 1582951824 (5e59ed90) 225 // 1 TestC test "failed" due to a hidden bug in TestC.cpp inherited from ALGLIB. Corrected.
32	2222 3356 3438 3266 1583163421 (5e5d281d) 226
32	2242 3356 3473 3238 1583193341 (5e5d9cfd) 216
32	2232 3379 3473 3229 1583267567 (5e5ebeef) 210
33	2262 3367 3473 3218 1583609500 (5e63f69c) 220
33	2288 3460 3510 3217 1583795111 (5e66cba7) 218
33	2278 3497 3510 3279 1583852957 (5e67ad9d) 227
34	2288 3521 3500 3274 1583869463 (5e67ee17) // Ended early to make a last-minute change to the display format of TestC.cpp.
34	2262 3413 3510 3248 1583869582 (5e67ee8e) 218
34	2278 3521 3510 3245 1586305481 (5e8d19c9) 213 // Resumed from a temporary suspension, bunkering down to await the passing of a worldwide plague.
35	2278 3402 3449 3266 1589855728 (5ec345f0) 221 // Minor changes, following reconciliation with the main (and internal) branch of ALGLIB++.
35	2252 3485 3510 3265 1592593244 (5eed0b5c) 234
35	2198 3460 3438 3262 1593720351 (5efe3e1f) 223
35	2262 3413 3426 3282 1593794381 (5eff5f4d) 217
35	2294 3449 3498 3287 1593905439 (5f01111f) 212
36	2326 3449 3510 3289 1594326522 (5f077dfa) 226
36	2315 3460 3498 3282 1594410366 (5f08c57e) 219
36	2320 3390 3498 3279 1594701863 (5f0d3827) 214
36	2288 3437 3486 3297 1594955177 (5f1115a9) 213
36	2283 3534 3510 3271 1595472599 (5f18fad7) 219
36	2288 3485 3486 3255 1596334058 (5f261fea) 218
36	2294 3449 3426 3278 1596496519 (5f289a87) 218
37	2310 3472 3498 3282 1601204686 (5f7071ce) // 6 TestC tests failed, 4 stalled and 4 crashed, 1 sporadic failure (minqp).
37	2283 3367 3449 3250 1601325526 (5f7249d6) 229 // Corrected. Sporadic failures in minqp exist, found to have been inherited from ALGLIB.
37	2315 3509 3498 3276 1601836904 (5f7a1768) 227
37	2310 3497 3498 3282 1602025944 (5f7cf9d8) 214
37	2273 3402 3486 3260 1602621006 (5f860e4e) 222
37	2283 3449 3449 3262 1611556223 (600e657f) 218 // Final test of version 3.16.0 in preparation for update to 3.17.0.
38	2183 3413 3486 3262 1611557399 (600e6a17) 218 // Updated everything except LinAlg, Solvers, Optimization, TestI, TestC.
38	2288 3497 3461 3243 1611601185 (600f1521) 217
38	2315 3449 3498 3237 1611605209 (600f2429) 223 // Updating LinAlg, Solvers, TestI; TestC tests trfac:SPD(Sparse), directsparsesolvers:SPD-CRS(real) failed.
38	2283 3460 3510 3280 1611695289 (601084b9) 216 // Fixed. Updated LinAlg, Solvers, TestI.
38	2283 3472 3438 3243 1611721115 (6010e99b) 220 // Updated TestC except the minqp and minlp testing units.
38	2299 3472 3510 3285 1611721972 (6010ecf4) 206 // Updating Optimization, TestC: minlp:{Basic Tests, Single Call Usage}, minnlc:OptGuard Integrity Monitor failed.
38	2278 3413 3473 3271 1611802319 (601226cf) // minlp, minnlc failed; Ended early. Further upgrades to TestC pending.
38	2283 3534 3510 3252 1612840998 (60220026) 235 // Failures corrected. Further updates to 3.17.0 integrated into TestC.
38	2310 3413 3486 3284 1612909655 (60230c57) 234 // Completed update of TestC.
38	2273 3425 3461 3257 1613188134 (60274c26) 245 // Final upgrades to code, documentation and comments.
38	2299 3472 3510 3254 1613195786 (60276a0a) 232 // Corrections made to TestC to fix minor problems inherited from ALGLIB.
38	1934 3135 3237 2868 1623033790 (60bd87be) 198 // Tests resumed, following updates to the local system &amp; compiler (to GCC version 11.1.1).
38	3571 5525 5684 4897 1624304616 (60d0ebe8) 84 // Testing on System B.
38	5181 7937 8003 7185 1635364271 (6179adaf) 75 // Minor modifications to hqrnd.
39	5405 0.9x 7463 1.1x 8336 1.0x 7351 1.0x 1635575856 (617ce830) 72 // Reordering sub-packages &amp; tests in TestI.cpp to match 3.18.0.
39	5495 1.0x 8265 1.0x 8477 1.0x 7155 1.0x 1637092621 (61940d0d) 79 // Simplifications in Ap.{cpp,h}.
39	5435 1.0x 8404 1.0x 8477 1.0x 7132 0.9x 1637109709 (61944fcd) 77 // Reordering testing units in TestC.cpp to match 3.18.0.
39	5495 1.0x 8197 1.0x 8477 1.0x 7434 0.9x 1637448064 (61997980) 76 // Partial upgrades: TestX.cpp, Ap.h.
39	5495 1.0x 8197 1.0x 8550 1.0x 7463 1.0x 1637890616 (61a03a38) 75 // Simplifications Ap.h.
39	4673 1.0x 7519 1.1x 8406 1.0x 7228 1.0x 1638957669 (61b08265) 74 // Minor fixes in Ap.{cpp,h} to better match 3.18.0.
39	5465 0.9x 7875 1.0x 8406 0.9x 7258 1.0x 1639362698 (61b6b08a) 82 // Minor fixes in TestX.cpp.
39	5319 1.0x 7813 1.0x 8133 1.0x 7428 1.0x 1639430716 (61b7ba3c) 79 // Removing the CPU initialization from Ap.{cpp,h}.
39	5000 1.0x 6494 1.2x 8003 1.0x 6826 1.0x 1641872436 (61dcfc34) 82 // Re-sorting of routines to better match 3.18.0.
39	4505 0.9x 6994 1.0x 7815 1.0x 7225 1.0x 1644177884 (620029dc) 77 // Adding changes made separately for 3.18.0 into here.
39	5435 1.0x 8404 1.0x 8267 1.0x 7255 1.0x 1644800572 (6209aa3c) 75 // Adding changes made into the RCOMM interface for 3.18.0 into here.
39	4237 1.0x 6897 1.1x 8406 1.0x 7386 1.0x 1645175143 (620f6167) 77 // Adding changes made separately for 3.18.0 to Ap.* and TestX.cpp.
39	5102 1.0x 8334 0.9x 8200 1.0x 7149 1.0x 1645649689 (62169f19) 79 // Adding changes made to conditionals in 3.18.0.
40	6289 1.0x 10990 1.1x 12052 0.9x 9679 1.0x 1646959113 (622a9a09) 81 // Updating Ap.* to 3.18.0 and adding Kernel*.*.
40	6289 1.0x 10001 1.0x 10993 1.1x 9251 1.0x 1647127950 (622d2d8e) 78 // Updating AlgLibInternal.* to 3.18.0
0-39	6579 1.1x 12347 1.0x 12199 1.0x 9761 1.0x 1647218402 (622e8ee2) 76 // Minor changes to Test{I,X,C}.cpp to sync to 3.18.0.
0-39	7634 0.9x 9525 1.0x 9807 1.0x 9383 1.0x 1647575009 (6233ffe1) 78 // Minor changes to AlgLibInternal.* to sync to 3.18.0.
40	7463 1.0x 12347 1.0x 12199 1.0x 9885 1.0x 1647630939 (6234da5b) // TestC crashed at minnlc.
40	5952 1.0x 10001 1.2x 12052 1.0x 9486 1.0x 1648501134 (6242218e) 79 // Problems fixed.
40	7408 1.0x 11495 1.0x 11368 1.0x 9592 1.0x 1648501372 (6242227c) 80 // Checking for suspicious slow-down in TestX.
40	6024 1.0x 9805 1.1x 11632 0.9x 9684 0.9x 1648857552 (624791d0) 78 // Attempted stop-gap fix for the slow-down.
0-39	8000 0.9x 11766 1.1x 12199 1.0x 9608 1.0x 1649021803 (624a136b) 78 // Minor changes to AlgLibMisc.* to sync to 3.18.0.
0-39	7692 1.0x 12196 1.0x 12350 1.0x 8911 1.1x 1649378705 (624f8591) 79 // Minor changes to {Interpolation,LinAlg,SpecialFunctions}.cpp to sync to 3.18.0.
0-39	7634 0.9x 11237 1.1x 12199 1.0x 9550 1.0x 1650824757 (62659635) 78 // Localized more static constants.
40	8065 1.0x 12049 1.0x 11769 1.0x 9403 1.0x 1651429624 (626ed0f8) 80 // Minor changes to sync to 3.18.0.
40	8130 1.0x 12501 1.0x 11240 0.9x 9576 1.0x 1651694486 (6272db96) 79 // Notes.htm: Compiling a ‟Most Recent” test run.
0-39	8130 1.0x 12347 1.0x 12199 0.9x 9502 1.0x 1652120495 (62795baf) 78 // TestC.cpp: Minor changes to sync to 3.18.0.
40	7143 1.1x 12501 1.0x 12350 1.0x 9784 1.0x 1652120083 (62795a13) 75 // Updated {LinAlg,Solvers,Optimization,TestC}.* to 3.18.0.
40	7937 1.0x 12347 1.0x 11909 1.0x 8455 1.0x 1659302551 (62e6f297) 77 // Changes &amp; retrofits before updating to 3.19.0.
41	6135 1.0x 10639 1.2x 12350 1.0x 9362 1.0x 1659305283 (62e6fd43) 79 // Updating {Kernels*,Ap,AlgLibInternal}.* to 3.19.0.
41	7692 1.0x 11629 1.0x 11368 1.0x 9373 1.0x 1676490974 (63ed38de) 77 // Finishing 3.19.0 update, TestC rbf failed.
41	7813 1.0x 11766 1.0x 11909 1.0x 9828 1.0x 1676680343 (63f01c97) 76 // Finished 3.19.0 update. TestC rbf failure due to a hidden bug inherited from ALGLIB_cpp.
42	7576 1.0x 11906 1.0x 11498 1.0x 9885 1.0x 1680377853 (642887fd) 76 // Partial inclusion of updates in 3.20.0. TestC minbc failed (Other Properties).
42	7692 1.0x 11766 0.9x 11632 1.0x 9518 1.0x 1680482344 (642a2028) 78 // Partial inclusion of updates in 3.20.0 staged. TestC minbc error corrected.
42	7634 1.0x 11629 1.0x 11769 1.0x 7742 1.0x 1680735245 (642dfc0d) 79 // Upgrade of Ap.{cpp,h} to 3.20.0.
42	7519 1.0x 11365 1.0x 11769 1.0x 9690 1.0x 1680990464 (6431e100) 76 // Upgrade of AlgLibInternal.{cpp,h} to 3.20.0.
42	7519 1.0x 12049 1.0x 11115 1.0x 9539 1.0x 1681933586 (64404512) 75 // Upgrade of TestC.cpp (alglibbasics, main) for Ap.{cpp,h} to 3.20.0.
42	7692 1.0x 11906 0.9x 11498 1.0x 9373 1.0x 1681935896 (64404e18) 79 // Upgrade of TestC.cpp (tsort) for AlgLibInternal.{cpp,h} to 3.20.0.
42	7752 1.0x 11629 1.0x 11909 1.0x 9761 1.0x 1681937187 (64405323) 76 // Upgrade of LinAlg.{cpp,h} to 3.20.0.
42	7752 1.0x 12347 1.0x 12199 1.0x 8547 1.0x 1682091340 (6442ad4c) 81 // Upgrade of Optimization.{cpp,h} to 3.20.0.
42	7634 1.0x 11629 1.0x 11909 1.0x 8725 1.0x 1682094006 (6442b7b6) 81 // Upgrade of Interpolation.{cpp,h} to 3.20.0. TestC spline2d (Missing Cells) failed.
42	8000 1.0x 12347 1.0x 12199 1.0x 9429 1.0x 1682095979 (6442bf6b) 79 // Finished 3.20.0 update. TestC spline2d "failure" fixed (it was false negative, not a failure).
</pre>
</p>
<p>
<a name=supp_History4 class=sheader></a><h3>A6.4. The Most Recent Test Run</h3>
<pre class=narration>
echo "TestI: API Interface"
TestI: API Interface
./TestI
CPUID: sse2 avx2 fma
OS: POSIX
C++ tests. Please wait...
Allocation counter activated...
Allocation counter checked... Ok
echo "TestY: C++ Wrapper Test"
TestY: C++ Wrapper Test
./TestY
echo "TestZ: Exception-Free Wrapper Test"
TestZ: Exception-Free Wrapper Test
./TestZ
Test exception-free error handling:
Allocation counter activated...
* default flag value          Ok
* 1D arrays                   Ok
* 2D arrays                   Ok
* ALGLIB objects              Ok
* ALGLIB functions            Ok
Allocation counter checked... Ok
echo "TestX: Speed and Consistency"
TestX: Speed and Consistency
./TestX
System:
* cores count                  1
Allocation counter activated...
Basic functions:
* 1D arrays                   Ok
* 2D arrays                   Ok
* CSV support                 Ok
* Serialization (kd-tree)     Ok
* Serialization (RBF)         Ok
* Progress/termination (RBF)  Ok
* Exceptions in constructors  Ok
SMP settings vs GEMM speedup:
* test skipped (no SMP)       ??
Issues:
* Issue 505                   Ok
* Issue 478                   Ok
* Issue 528                   Ok
* Issue 591                   Ok
* Issue 594                   Ok
* Issue 764                   Ok
* Issue 813                   Ok
* Issue 824                   Ok
Performance:
* RGEMM-SEQ-16   (MFLOPS)   8000
* RGEMM-MTN-16              1.0x
* RGEMM-SEQ-32   (MFLOPS)  12347
* RGEMM-MTN-32              1.0x
* RGEMM-SEQ-64   (MFLOPS)  12199
* RGEMM-MTN-64              1.0x
* RGEMM-SEQ-1024 (MFLOPS)   9429
* RGEMM-MTN-1024            1.0x
Allocation counter checked... Ok
echo "TestC: Internal Routines"
TestC: Internal Routines
./TestC
Seed: 1682095979 (6442bf6b)
Compiler: GCC
Hardware: 64-bit
Byte Order: little-endian
CPU: Intel
Cores: 1 (serial version)
Libs: (None)
CPUID: sse2 avx2 fma
OS: POSIX
Testing Mode: single core
 1/90: ablasf                           Ok
 2/90: hqrnd                            Ok
 3/90: ablas                            Ok
 4/90: hblas                            Ok
 5/90: creflections                     Ok
 6/90: sblas                            Ok
 7/90: ortfac                           Ok
 8/90: matgen                           Ok
 9/90: tsort                            Ok
10/90: sparse                           Ok
11/90: blas                             Ok
12/90: evd                              Ok
13/90: trfac                            Ok
14/90: polynomialsolver                 Ok
15/90: bdsvd                            Ok
16/90: svd                              Ok
17/90: trlinsolve                       Ok
18/90: safesolve                        Ok
19/90: rcond                            Ok
20/90: xblas                            Ok
21/90: directdensesolvers               Ok
22/90: directsparsesolvers              Ok
23/90: fbls                             Ok
24/90: iterativesparse                  Ok
25/90: lincg                            Ok
26/90: normestimator                    Ok
27/90: linlsqr                          Ok
28/90: linmin                           Ok
29/90: nleq                             Ok
30/90: matinv                           Ok
31/90: optserv                          Ok
32/90: minlbfgs                         Ok
33/90: cqmodels                         Ok
34/90: snnls                            Ok
35/90: sactivesets                      Ok
36/90: minbleic                         Ok
37/90: minqp                            Ok
38/90: minlm                            Ok
39/90: mincg                            Ok
40/90: minlp                            Ok
41/90: minnlc                           Ok
42/90: minns                            Ok
43/90: minbc                            Ok
44/90: nearestneighbor                  Ok
45/90: odesolver                        Ok
46/90: inverseupdate                    Ok
47/90: schur                            Ok
48/90: spdgevd                          Ok
49/90: gammafunc                        Ok
50/90: gq                               Ok
51/90: gkq                              Ok
52/90: autogk                           Ok
53/90: normaldistr                      Ok
54/90: basestat                         Ok
55/90: wsr                              Ok
56/90: mannwhitneyu                     Ok
57/90: stest                            Ok
58/90: studentttests                    Ok
59/90: ratint                           Ok
60/90: idw                              Ok
61/90: polint                           Ok
62/90: spline1d                         Ok
63/90: lsfit                            Ok
64/90: fitsphere                        Ok
65/90: parametric                       Ok
66/90: spline2d                         Ok
67/90: spline3d                         Ok
68/90: rbf                              Ok
69/90: fft                              Ok
70/90: fht                              Ok
71/90: conv                             Ok
72/90: corr                             Ok
73/90: chebyshev                        Ok
74/90: hermite                          Ok
75/90: legendre                         Ok
76/90: laguerre                         Ok
77/90: pca                              Ok
78/90: bdss                             Ok
79/90: mlpbase                          Ok
80/90: mlpe                             Ok
81/90: clustering                       Ok
82/90: dforest                          Ok
83/90: linreg                           Ok
84/90: filters                          Ok
85/90: ssa                              Ok
86/90: lda                              Ok
87/90: mcpd                             Ok
88/90: knn                              Ok
89/90: mlptrain                         Ok
90/90: alglibbasics                     Ok
Done in 79 seconds
</pre>
</p>
</div>
</body>
</html>
